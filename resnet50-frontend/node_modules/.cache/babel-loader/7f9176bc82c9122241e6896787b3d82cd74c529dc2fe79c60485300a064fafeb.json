{"ast":null,"code":"var _jsxFileName = \"C:\\\\backend\\\\resnet50-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [prediction, setPrediction] = useState(\"\");\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = async () => {\n    if (!file) {\n      alert(\"Please upload a file!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/predict\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setPrediction(response.data.prediction);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setPrediction(\"Error occurred while predicting\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Flower Color Predictor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload a flower image to predict its color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      style: {\n        marginLeft: \"10px\"\n      },\n      children: \"Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Prediction: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"VfkdPO+jsn3Y4zdBlPai2HrjfAA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","prediction","setPrediction","handleFileChange","e","target","files","handleSubmit","alert","formData","FormData","append","response","post","headers","data","error","console","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/backend/resnet50-frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n    const [file, setFile] = useState(null);\n    const [prediction, setPrediction] = useState(\"\");\n\n    const handleFileChange = (e) => {\n        setFile(e.target.files[0]);\n    };\n\n    const handleSubmit = async () => {\n        if (!file) {\n            alert(\"Please upload a file!\");\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(\"file\", file);\n\n        try {\n            const response = await axios.post(\"http://127.0.0.1:5000/predict\", formData, {\n                headers: { \"Content-Type\": \"multipart/form-data\" },\n            });\n            setPrediction(response.data.prediction);\n        } catch (error) {\n            console.error(\"Error:\", error);\n            setPrediction(\"Error occurred while predicting\");\n        }\n    };\n\n    return (\n        <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n            <h1>Flower Color Predictor</h1>\n            <p>Upload a flower image to predict its color</p>\n            <input type=\"file\" onChange={handleFileChange} />\n            <button onClick={handleSubmit} style={{ marginLeft: \"10px\" }}>\n                Predict\n            </button>\n            {prediction && <h2>Prediction: {prediction}</h2>}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,gBAAgB,GAAIC,CAAC,IAAK;IAC5BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACR,IAAI,EAAE;MACPS,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACJ;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC;IAE7B,IAAI;MACA,MAAMa,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,+BAA+B,EAAEJ,QAAQ,EAAE;QACzEK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACrD,CAAC,CAAC;MACFZ,aAAa,CAACU,QAAQ,CAACG,IAAI,CAACd,UAAU,CAAC;IAC3C,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9Bd,aAAa,CAAC,iCAAiC,CAAC;IACpD;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKsB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnDzB,OAAA;MAAAyB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B7B,OAAA;MAAAyB,QAAA,EAAG;IAA0C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjD7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAExB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD7B,OAAA;MAAQgC,OAAO,EAAErB,YAAa;MAACW,KAAK,EAAE;QAAEW,UAAU,EAAE;MAAO,CAAE;MAAAR,QAAA,EAAC;IAE9D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRxB,UAAU,iBAAIL,OAAA;MAAAyB,QAAA,GAAI,cAAY,EAACpB,UAAU;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd;AAAC3B,EAAA,CAvCQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}